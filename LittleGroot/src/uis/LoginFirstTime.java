/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uis;

import java.awt.Cursor;
import java.awt.Image;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.sql.*;
import javax.swing.SwingUtilities;
/**
 *
 * @author gamitha
 */
public class LoginFirstTime extends javax.swing.JPanel {
    User user = Main.getUser();
    /**
     * Creates new form LoginFirstTime
     */
    // Document listener and focus listener for textboxes
    private void addDocumentListenerAndFocusListener(JTextField textField, JLabel label) {
        textField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                label.setVisible(true);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                if (textField.getText().trim().isEmpty()) {
                    label.setVisible(false);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                // This method is not used in this example
            }
        });

        textField.addFocusListener(new FocusAdapter() {
            @Override
            public void focusLost(FocusEvent e) {
                if (textField.getText().trim().isEmpty()) {
                    textField.setVisible(false);
                }
            }
        });
    }
    
    public LoginFirstTime() {
        initComponents();
        
        // Visibility off
        cmbSecQuestion.setVisible(false);
        txtSecQuestionAnswer.setVisible(false);
        sVGSecQuestionAnswerClear.setVisible(false);
        
        // Add document and focus listeners
        addDocumentListenerAndFocusListener(txtSecQuestionAnswer, sVGSecQuestionAnswerClear);
        
        // Set SVGs
        sVGNameLogo.setSvgImage("./svgcomponents/NameLogo.svg", 160, 32);
        sVGSecQuestionCmb.setSvgImage("./svgcomponents/SecurityQuestionCmb.svg", 206, 22);
        sVGSecQuestionAnswerTextBox.setSvgImage("./svgcomponents/SecurityQuestionTextBox.svg", 206, 22);
        sVGSubmitBtn.setSvgImage("./svgcomponents/SubmitBtn.svg", 58, 22);
        sVGSecQuestionAnswerClear.setSvgImage("./svgcomponents/ClearBtn.svg", 16, 16);
        
        // Set PNGs
        addImageToLabel();
        
        // Set Cursors
        Cursor txtCur = new Cursor(Cursor.TEXT_CURSOR);
        Cursor hand = new Cursor(Cursor.HAND_CURSOR);
        sVGSecQuestionAnswerTextBox.setCursor(txtCur);
        sVGSubmitBtn.setCursor(hand);
    }

    private void addImageToLabel() {
        // Logo
        try {
            // Get the image
            java.net.URL imgURL = getClass().getResource("/pngcomponents/Logo.png");
            ImageIcon icon = new ImageIcon(imgURL);

            // Scale the image
            Image image = icon.getImage();
            Image newimg = image.getScaledInstance(150, 145, java.awt.Image.SCALE_SMOOTH); // Scale it the smooth way 
            icon = new ImageIcon(newimg);  // Transform it back

            // Add the image to the label
            pngLogo.setIcon(icon);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pngLogo = new javax.swing.JLabel();
        sVGSecQuestionAnswerClear = new main.SVGImage();
        txtSecQuestionAnswer = new javax.swing.JTextField();
        cmbSecQuestion = new javax.swing.JComboBox<>();
        sVGNameLogo = new main.SVGImage();
        sVGSecQuestionCmb = new main.SVGImage();
        sVGSecQuestionAnswerTextBox = new main.SVGImage();
        sVGSubmitBtn = new main.SVGImage();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(null);
        setLayout(null);

        pngLogo.setBackground(new java.awt.Color(0, 0, 0));
        pngLogo.setForeground(new java.awt.Color(0, 0, 0));
        pngLogo.setText("pngLogo");
        add(pngLogo);
        pngLogo.setBounds(350, 75, 150, 145);

        sVGSecQuestionAnswerClear.setForeground(new java.awt.Color(0, 0, 0));
        sVGSecQuestionAnswerClear.setText("sVGPasswordClear");
        sVGSecQuestionAnswerClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sVGSecQuestionAnswerClearMouseClicked(evt);
            }
        });
        add(sVGSecQuestionAnswerClear);
        sVGSecQuestionAnswerClear.setBounds(507, 356, 16, 16);

        txtSecQuestionAnswer.setFont(new java.awt.Font("SF Pro Text", 0, 13)); // NOI18N
        txtSecQuestionAnswer.setForeground(new java.awt.Color(0, 0, 0));
        txtSecQuestionAnswer.setBorder(null);
        txtSecQuestionAnswer.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtSecQuestionAnswerPropertyChange(evt);
            }
        });
        add(txtSecQuestionAnswer);
        txtSecQuestionAnswer.setBounds(329, 356, 192, 16);

        cmbSecQuestion.setFont(new java.awt.Font("SF Pro Text", 0, 13)); // NOI18N
        cmbSecQuestion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "What was the name of your first pet?", "What was the make and model of your first car?", "What was the name of the street where you grew up?", "What was the name of your first school?", "What is your motherâ€™s maiden name?", "What is your favorite book?", "What is your favorite movie?", "What is your favorite food?", "What city were you born in?", "What is the name of your favorite childhood friend?" }));
        cmbSecQuestion.setSelectedIndex(-1);
        cmbSecQuestion.setToolTipText("");
        cmbSecQuestion.setBorder(null);
        cmbSecQuestion.setName(""); // NOI18N
        cmbSecQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSecQuestionActionPerformed(evt);
            }
        });
        add(cmbSecQuestion);
        cmbSecQuestion.setBounds(322, 311, 206, 22);

        sVGNameLogo.setForeground(new java.awt.Color(0, 0, 0));
        sVGNameLogo.setText("sVGNameLogo");
        add(sVGNameLogo);
        sVGNameLogo.setBounds(345, 236, 160, 32);

        sVGSecQuestionCmb.setForeground(new java.awt.Color(0, 0, 0));
        sVGSecQuestionCmb.setText("sVGSecQuestionCmb");
        sVGSecQuestionCmb.setFocusable(false);
        sVGSecQuestionCmb.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sVGSecQuestionCmbFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sVGSecQuestionCmbFocusLost(evt);
            }
        });
        sVGSecQuestionCmb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sVGSecQuestionCmbMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sVGSecQuestionCmbMouseReleased(evt);
            }
        });
        add(sVGSecQuestionCmb);
        sVGSecQuestionCmb.setBounds(322, 311, 206, 22);

        sVGSecQuestionAnswerTextBox.setForeground(new java.awt.Color(0, 0, 0));
        sVGSecQuestionAnswerTextBox.setText("sVGSecQuestionAnswerTextBox");
        sVGSecQuestionAnswerTextBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sVGSecQuestionAnswerTextBoxMouseClicked(evt);
            }
        });
        add(sVGSecQuestionAnswerTextBox);
        sVGSecQuestionAnswerTextBox.setBounds(322, 353, 206, 22);

        sVGSubmitBtn.setForeground(new java.awt.Color(0, 0, 0));
        sVGSubmitBtn.setText("sVGSubmitBtn");
        sVGSubmitBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sVGSubmitBtnMouseClicked(evt);
            }
        });
        add(sVGSubmitBtn);
        sVGSubmitBtn.setBounds(471, 390, 58, 22);
    }// </editor-fold>//GEN-END:initComponents

    private void sVGSecQuestionCmbFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sVGSecQuestionCmbFocusGained

    }//GEN-LAST:event_sVGSecQuestionCmbFocusGained

    private void sVGSecQuestionCmbFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sVGSecQuestionCmbFocusLost

    }//GEN-LAST:event_sVGSecQuestionCmbFocusLost

    private void sVGSecQuestionCmbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sVGSecQuestionCmbMouseClicked
        cmbSecQuestion.setVisible(true);
        cmbSecQuestion.requestFocusInWindow();
    }//GEN-LAST:event_sVGSecQuestionCmbMouseClicked

    private void sVGSecQuestionCmbMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sVGSecQuestionCmbMouseReleased

    }//GEN-LAST:event_sVGSecQuestionCmbMouseReleased

    private void sVGSecQuestionAnswerTextBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sVGSecQuestionAnswerTextBoxMouseClicked
        txtSecQuestionAnswer.setVisible(true);
        txtSecQuestionAnswer.requestFocusInWindow();
    }//GEN-LAST:event_sVGSecQuestionAnswerTextBoxMouseClicked

    private void sVGSubmitBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sVGSubmitBtnMouseClicked
        int question = cmbSecQuestion.getSelectedIndex();
        String answer = txtSecQuestionAnswer.getText();
        
        if (question == -1) { // Check whether selected a question
            MessageDialog noQuestionSelected = new MessageDialog(1, this, "Login", "No Security Question Selected", "Please select a security question for your account.");
            return;
        } else if (answer.isBlank()) {
            MessageDialog noAnswerProvided = new MessageDialog(1, this, "Login", "No Answer Provided", "Please provide an answer to the security question.");
            return;
        }
        
        // Add to the database
        Connection conn = null;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/LittleGroot", "root" , "toor");

            Statement st = conn.createStatement();
            int updatedRows = st.executeUpdate("UPDATE Employee SET SecQQ = '" + question + "', SecQA = '" + answer + "' WHERE EmpID = " + user.eid);
            if(updatedRows > 0) {
                // Show message
                MessageDialog questionAddedSuccess = new MessageDialog(0, this, "Login", "Security Question Added", "Your security question has been added successfully!");
                
                // Open Main
                Main mainFrame = new Main();
                mainFrame.setLocationRelativeTo(this);
                mainFrame.setVisible(true);

                // Close self
                SwingUtilities.getWindowAncestor(sVGSubmitBtn).dispose();
            } else {
                MessageDialog questionAddFail = new MessageDialog(0, this, "Login", "Security Question Addition Failed", "Failed to add your security question. Please try again.");
            }
        } catch (ClassNotFoundException | SQLException e) {
            MessageDialog dbConnectionFailure = new MessageDialog(1, this, "Database", "Database Connection Failed", "Unable to connect to the database.");
        } finally {
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException e) {
                    MessageDialog closeConnectionFailure = new MessageDialog(1, this, "Database", "Connection Closure Failed", "Failed to close the database connection.");
                }
            }
        }
    }//GEN-LAST:event_sVGSubmitBtnMouseClicked

    private void txtSecQuestionAnswerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtSecQuestionAnswerPropertyChange

    }//GEN-LAST:event_txtSecQuestionAnswerPropertyChange

    private void sVGSecQuestionAnswerClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sVGSecQuestionAnswerClearMouseClicked
        txtSecQuestionAnswer.setText("");
        sVGSecQuestionAnswerClear.setVisible(false);
    }//GEN-LAST:event_sVGSecQuestionAnswerClearMouseClicked

    private void cmbSecQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSecQuestionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSecQuestionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbSecQuestion;
    private javax.swing.JLabel pngLogo;
    private main.SVGImage sVGNameLogo;
    private main.SVGImage sVGSecQuestionAnswerClear;
    private main.SVGImage sVGSecQuestionAnswerTextBox;
    private main.SVGImage sVGSecQuestionCmb;
    private main.SVGImage sVGSubmitBtn;
    private javax.swing.JTextField txtSecQuestionAnswer;
    // End of variables declaration//GEN-END:variables
}
